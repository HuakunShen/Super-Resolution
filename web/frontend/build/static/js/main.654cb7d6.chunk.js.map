{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["ImageUploader","props","inputEl","useRef","useState","imgsrc","setImgSrc","useEffect","drop_region","document","getElementById","handle_drop","e","preventDefault","stopPropagation","classList","remove","handleDrop","forEach","eventName","addEventListener","add","current","click","onDrop","topPropagation","id","className","src","alt","type","ref","onChange","handleInputByClick","ImageDisplayer","img","App","imgFile","setImgFile","weight","setWeight","imgdisplay","setImgdisplay","handleFileInput","file","FormData","FileReader","fr","onload","result","readAsDataURL","files","dataTransfer","Array","from","target","onClick","data","append","axios","post","then","res","catch","err","console","log","name","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.654cb7d6.chunk.js","sourcesContent":["import { useRef, useState, useEffect, Fragment } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport axios from \"axios\";\n\nconst ImageUploader = (props) => {\n  const inputEl = useRef();\n  const [imgsrc, setImgSrc] = useState(null);\n  useEffect(() => {\n    const drop_region = document.getElementById(\"drop-region\");\n    function handle_drop(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      drop_region.classList.remove(\"drag-over\");\n      props.handleDrop(e, setImgSrc);\n    }\n\n    [\"dragenter\", \"dragover\"].forEach((eventName) => {\n      drop_region.addEventListener(\n        eventName,\n        (e) => {\n          e.preventDefault();\n          e.stopPropagation();\n          drop_region.classList.add(\"drag-over\");\n        },\n        false\n      );\n    });\n    [\"dragleave\", \"drop\"].forEach((eventName) => {\n      drop_region.addEventListener(eventName, handle_drop, false);\n    });\n    drop_region.addEventListener(\"click\", () => {\n      inputEl.current.click();\n    });\n    drop_region.onDrop = (e) => {\n      e.topPropagation();\n      e.preventDefault();\n    };\n  }, []);\n  return (\n    <div id=\"drop-region\" className=\"image-view uploader text-center\">\n      {imgsrc ? (\n        <img src={imgsrc} alt=\"\" />\n      ) : (\n        <Fragment>\n          <h2>Drag and Drop or Click to Upload</h2>\n        </Fragment>\n      )}\n      <input\n        id=\"file-input\"\n        type=\"file\"\n        ref={inputEl}\n        onChange={(e) => {\n          props.handleInputByClick(e, setImgSrc);\n        }}\n      />\n    </div>\n  );\n};\n\nconst ImageDisplayer = (props) => {\n  return (\n    <div className=\"image-view text-center\">\n      {props.img ? <img src={props.img} /> : <h2>Output</h2>}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [imgFile, setImgFile] = useState(null);\n  const [weight, setWeight] = useState(null);\n  const [imgdisplay, setImgdisplay] = useState(null);\n  const handleFileInput = (file, setImgSrc) => {\n    const formData = new FormData();\n    if (FileReader && file) {\n      var fr = new FileReader();\n      fr.onload = function () {\n        setImgSrc(fr.result);\n      };\n      fr.readAsDataURL(file);\n    }\n    setImgFile(file);\n  };\n\n  const handleDrop = (e, setImgSrc) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    handleFileInput(Array.from(files)[0], setImgSrc);\n    return false;\n  };\n\n  const handleInputByClick = (e, setImgSrc) => {\n    handleFileInput(e.target.files[0], setImgSrc);\n  };\n\n  const handleConvert = (e) => {\n    const data = new FormData();\n    data.append(\"image\", imgFile);\n    data.append(\"weight\", weight);\n    axios\n      .post(\"/sr\", data)\n      .then((res) => {\n        setImgdisplay(\"data:image/png;base64,\" + res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const inputWeight = (e) => {\n    setWeight(e.target.files[0]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Super Resolution</h1>\n        <div className=\"row\">\n          <div id=\"drop-region-container\" className=\"col uploader-col\">\n            <ImageUploader\n              type=\"Input Low Resolution Image\"\n              handleDrop={handleDrop}\n              handleInputByClick={handleInputByClick}\n            />\n          </div>\n          <div className=\"col text-center\">\n            <button className=\"btn btn-primary\" onClick={handleConvert}>\n              Super Res It !!!\n            </button>\n          </div>\n          <div className=\"col uploader-col\">\n            <ImageDisplayer img={imgdisplay} />\n          </div>\n        </div>\n        <br />\n        <strong>\n          Select a Weight File (must correspond to the same input image type)\n        </strong>\n        <input\n          className=\"form-control\"\n          type=\"file\"\n          name=\"weight-input\"\n          id=\"model-weight-input\"\n          onChange={inputWeight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}